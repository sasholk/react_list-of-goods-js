{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","REVERSE","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","goods","prepearedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SACpBC,EAAU,UA4BT,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA7BR,SAA0BC,EAA1B,GAA0D,IAAvBL,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACtCI,EAAc,YAAOD,GAsB3B,OApBIL,GACFM,EACGC,MAAK,SAACC,EAAOC,GACZ,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKD,KAAZT,GACFI,EAAeJ,UAGVI,EAMcM,CACnBlB,EACA,CAAEM,YAAWE,YAGf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaN,IAC5BoB,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYhB,IAAcL,IANhC,iCAYA,wBACEmB,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,WAAYhB,IAAcJ,KAHjE,4BAQA,wBACEkB,QAAS,kBACLX,EADwB,KAAZD,EACD,GACAL,IACfkB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,WAAYd,IAAYL,KAL/D,qBAUgB,KAAdG,GAAgC,KAAZE,GACpB,wBACEY,QAAS,WACPb,EAAa,IACbE,EAAW,KAEbY,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGT,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3603a28a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\nconst REVERSE = 'reverse';\n\nfunction getPreparedGoods(goods, { sortField, reverse }) {\n  const prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods\n      .sort((good1, good2) => {\n        switch (sortField) {\n          case SORT_FIELD_ALPHABET:\n            return good1.localeCompare(good2);\n\n          case SORT_FIELD_LENGTH:\n            return good1.length - good2.length;\n\n          default:\n            return 0;\n        }\n      });\n  }\n\n  if (reverse !== '') {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState('');\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, reverse },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortField !== SORT_FIELD_LENGTH })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => (reverse !== ''\n            ? setReverse('')\n            : setReverse(REVERSE))}\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': reverse !== REVERSE })}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField === '' && reverse === '') || (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReverse('');\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}